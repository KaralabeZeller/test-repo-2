openapi: 3.0.3
info:
  title: RePlant-Core API
  description: API for managing RePlant related stuff
  version: 1.0.0
servers:
  - url: http://localhost:8080/
    description: Local server
tags:
  - name: Product
    description: API for managing products
  - name: Company
    description: API for managing companies

paths:
  /products:
    get:
      summary: Get all products
      operationId: getAllProducts
      tags:
        - Product
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
    post:
      summary: Create a new product
      operationId: createProduct
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Product created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

  /products/{id}:
    get:
      summary: Get product by ID
      operationId: getProductById
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Product found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
    put:
      summary: Update product by ID
      operationId: updateProduct
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Product updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
    delete:
      summary: Delete product by ID
      operationId: deleteProduct
      tags:
        - Product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: Product deleted
        "404":
          description: Product not found

  /companies:
    get:
      summary: Get all companies
      operationId: getAllCompanies
      tags:
        - Company
      responses:
        "200":
          description: List of companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Company"
    post:
      summary: Create a new company
      operationId: createCompany
      tags:
        - Company
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        "201":
          description: Company created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"

  /companies/{id}:
    get:
      summary: Get company by ID
      operationId: getCompanyById
      tags:
        - Company
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Company found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "404":
          description: Company not found
    put:
      summary: Update company by ID
      operationId: updateCompany
      tags:
        - Company
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        "200":
          description: Company updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "404":
          description: Company not found
    delete:
      summary: Delete company by ID
      operationId: deleteCompany
      tags:
        - Company
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: Company deleted
        "404":
          description: Company not found

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 200
        quantity:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Company:
      type: object
      properties:
        id:
          type: integer
          format: int64
        oldId:
          type: string
          nullable: true
        name:
          type: string
        taxNumber:
          type: string
        accountingAddress:
          type: string
        web:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
        contactName:
          type: string
          nullable: true
        contactEmail:
          type: string
          nullable: true
        contactPhone:
          type: string
          nullable: true
        owner:
          type: string
          nullable: true
        discount:
          type: number
          format: decimal
          nullable: true
        unasId:
          type: string
          nullable: true
        monthlyBilling:
          type: boolean
          nullable: true
